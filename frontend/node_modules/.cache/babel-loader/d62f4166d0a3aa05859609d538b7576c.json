{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fernanda\\\\Documents\\\\GitHub\\\\plantzzz\\\\frontend\\\\src\\\\examples\\\\LayoutContainers\\\\DashboardLayout\\\\index.js\";\n/**\n=========================================================\n* Material Dashboard 2 React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport React from 'react';\nimport { useEffect } from \"react\";\n\n// react-router-dom components\nimport { useLocation } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React context\nimport { useMaterialUIController, setLayout } from \"context\";\nfunction DashboardLayout({\n  children\n}) {\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav\n  } = controller;\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    setLayout(dispatch, \"dashboard\");\n  }, [pathname]);\n  return /*#__PURE__*/React.createElement(MDBox, {\n    sx: ({\n      breakpoints,\n      transitions,\n      functions: {\n        pxToRem\n      }\n    }) => ({\n      p: 3,\n      position: \"relative\",\n      [breakpoints.up(\"xl\")]: {\n        marginLeft: miniSidenav ? pxToRem(120) : pxToRem(274),\n        transition: transitions.create([\"margin-left\", \"margin-right\"], {\n          easing: transitions.easing.easeInOut,\n          duration: transitions.duration.standard\n        })\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, children);\n}\n\n// Typechecking props for the DashboardLayout\nDashboardLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default DashboardLayout;","map":{"version":3,"names":["React","useEffect","useLocation","PropTypes","MDBox","useMaterialUIController","setLayout","DashboardLayout","children","controller","dispatch","miniSidenav","pathname","createElement","sx","breakpoints","transitions","functions","pxToRem","p","position","up","marginLeft","transition","create","easing","easeInOut","duration","standard","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","node","isRequired"],"sources":["C:/Users/Fernanda/Documents/GitHub/plantzzz/frontend/src/examples/LayoutContainers/DashboardLayout/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2 React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport React from 'react';\nimport { useEffect } from \"react\";\n\n// react-router-dom components\nimport { useLocation } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React context\nimport { useMaterialUIController, setLayout } from \"context\";\n\nfunction DashboardLayout({ children }) {\n  const [controller, dispatch] = useMaterialUIController();\n  const { miniSidenav } = controller;\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    setLayout(dispatch, \"dashboard\");\n  }, [pathname]);\n\n  return (\n    <MDBox\n      sx={({ breakpoints, transitions, functions: { pxToRem } }) => ({\n        p: 3,\n        position: \"relative\",\n\n        [breakpoints.up(\"xl\")]: {\n          marginLeft: miniSidenav ? pxToRem(120) : pxToRem(274),\n          transition: transitions.create([\"margin-left\", \"margin-right\"], {\n            easing: transitions.easing.easeInOut,\n            duration: transitions.duration.standard,\n          }),\n        },\n      })}\n    >\n      {children}\n    </MDBox>\n  );\n}\n\n// Typechecking props for the DashboardLayout\nDashboardLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default DashboardLayout;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA,OAAOC,KAAK,MAAM,kBAAkB;;AAEpC;AACA,SAASC,uBAAuB,EAAEC,SAAS,QAAQ,SAAS;AAE5D,SAASC,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACrC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGL,uBAAuB,CAAC,CAAC;EACxD,MAAM;IAAEM;EAAY,CAAC,GAAGF,UAAU;EAClC,MAAM;IAAEG;EAAS,CAAC,GAAGV,WAAW,CAAC,CAAC;EAElCD,SAAS,CAAC,MAAM;IACdK,SAAS,CAACI,QAAQ,EAAE,WAAW,CAAC;EAClC,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;EAEd,oBACEZ,KAAA,CAAAa,aAAA,CAACT,KAAK;IACJU,EAAE,EAAEA,CAAC;MAAEC,WAAW;MAAEC,WAAW;MAAEC,SAAS,EAAE;QAAEC;MAAQ;IAAE,CAAC,MAAM;MAC7DC,CAAC,EAAE,CAAC;MACJC,QAAQ,EAAE,UAAU;MAEpB,CAACL,WAAW,CAACM,EAAE,CAAC,IAAI,CAAC,GAAG;QACtBC,UAAU,EAAEX,WAAW,GAAGO,OAAO,CAAC,GAAG,CAAC,GAAGA,OAAO,CAAC,GAAG,CAAC;QACrDK,UAAU,EAAEP,WAAW,CAACQ,MAAM,CAAC,CAAC,aAAa,EAAE,cAAc,CAAC,EAAE;UAC9DC,MAAM,EAAET,WAAW,CAACS,MAAM,CAACC,SAAS;UACpCC,QAAQ,EAAEX,WAAW,CAACW,QAAQ,CAACC;QACjC,CAAC;MACH;IACF,CAAC,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEF1B,QACI,CAAC;AAEZ;;AAEA;AACAD,eAAe,CAAC4B,SAAS,GAAG;EAC1B3B,QAAQ,EAAEL,SAAS,CAACiC,IAAI,CAACC;AAC3B,CAAC;AAED,eAAe9B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}