{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhang\\\\Documents\\\\GitHub\\\\plantzzz\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, Routes, Route } from \"react-router-dom\";\nimport Navigation from \"../components/Navigation\";\nimport Profile from \"./Profile\";\nimport OngoingQuizzes from \"./OngoingQuizzes\";\nimport CompletedQuizzes from \"./CompletedQuizzes\";\nimport \"../styles/StudentDashboard.css\"; // Make sure this path is correct\n\nfunction StudentDashboard() {\n  const [studentInfo, setStudentInfo] = useState({});\n  const [ongoingQuizzes, setOngoingQuizzes] = useState([]);\n  const [completedQuizzes, setCompletedQuizzes] = useState([]);\n\n  // Fetch student information\n  useEffect(() => {\n    const fetchStudentInfo = async () => {\n      try {\n        const response = await fetch('/student/info?studentId=1'); // Replace with your API endpoint\n        if (response.ok) {\n          const data = await response.json();\n          setStudentInfo(data);\n        } else {\n          console.error('Failed to fetch student info');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchStudentInfo();\n  }, []);\n\n  // Fetch ongoing quizzes\n  useEffect(() => {\n    const fetchOngoingQuizzes = async () => {\n      try {\n        const response = await fetch('/quizzes/ongoing?studentId=1'); // Replace with your API endpoint\n        if (response.ok) {\n          const data = await response.json();\n          setOngoingQuizzes(data);\n        } else {\n          console.error('Failed to fetch ongoing quizzes');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchOngoingQuizzes();\n  }, []);\n\n  // Fetch completed quizzes\n  useEffect(() => {\n    const fetchCompletedQuizzes = async () => {\n      try {\n        const response = await fetch('/quizzes/completed?studentId=1'); // Replace with your API endpoint\n        if (response.ok) {\n          const data = await response.json();\n          setCompletedQuizzes(data);\n        } else {\n          console.error('Failed to fetch completed quizzes');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchCompletedQuizzes();\n  }, []);\n\n  // Function to return 'active' class if the link is active\n  const getNavLinkClass = ({\n    isActive\n  }) => isActive ? 'active' : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"student-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"profile\",\n    className: getNavLinkClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"ongoing-quizzes\",\n    className: getNavLinkClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Ongoing Quizzes\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"completed-quizzes\",\n    className: getNavLinkClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Completed Quizzes\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"profile\",\n    element: /*#__PURE__*/React.createElement(Profile, {\n      studentInfo: studentInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"ongoing-quizzes\",\n    element: /*#__PURE__*/React.createElement(OngoingQuizzes, {\n      quizzes: ongoingQuizzes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 50\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"completed-quizzes\",\n    element: /*#__PURE__*/React.createElement(CompletedQuizzes, {\n      quizzes: completedQuizzes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    index: true,\n    element: /*#__PURE__*/React.createElement(Profile, {\n      studentInfo: studentInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default StudentDashboard;","map":{"version":3,"names":["React","useState","useEffect","NavLink","Routes","Route","Navigation","Profile","OngoingQuizzes","CompletedQuizzes","StudentDashboard","studentInfo","setStudentInfo","ongoingQuizzes","setOngoingQuizzes","completedQuizzes","setCompletedQuizzes","fetchStudentInfo","response","fetch","ok","data","json","console","error","fetchOngoingQuizzes","fetchCompletedQuizzes","getNavLinkClass","isActive","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","path","element","quizzes","index"],"sources":["C:/Users/zhang/Documents/GitHub/plantzzz/frontend/src/pages/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Routes, Route } from \"react-router-dom\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport Profile from \"./Profile\";\r\nimport OngoingQuizzes from \"./OngoingQuizzes\";\r\nimport CompletedQuizzes from \"./CompletedQuizzes\";\r\nimport \"../styles/StudentDashboard.css\"; // Make sure this path is correct\r\n\r\nfunction StudentDashboard() {\r\n  const [studentInfo, setStudentInfo] = useState({});\r\n  const [ongoingQuizzes, setOngoingQuizzes] = useState([]);\r\n  const [completedQuizzes, setCompletedQuizzes] = useState([]);\r\n\r\n  // Fetch student information\r\n  useEffect(() => {\r\n    const fetchStudentInfo = async () => {\r\n      try {\r\n        const response = await fetch('/student/info?studentId=1'); // Replace with your API endpoint\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setStudentInfo(data);\r\n        } else {\r\n          console.error('Failed to fetch student info');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudentInfo();\r\n  }, []);\r\n\r\n  // Fetch ongoing quizzes\r\n  useEffect(() => {\r\n    const fetchOngoingQuizzes = async () => {\r\n      try {\r\n        const response = await fetch('/quizzes/ongoing?studentId=1'); // Replace with your API endpoint\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setOngoingQuizzes(data);\r\n        } else {\r\n          console.error('Failed to fetch ongoing quizzes');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchOngoingQuizzes();\r\n  }, []);\r\n\r\n  // Fetch completed quizzes\r\n  useEffect(() => {\r\n    const fetchCompletedQuizzes = async () => {\r\n      try {\r\n        const response = await fetch('/quizzes/completed?studentId=1'); // Replace with your API endpoint\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setCompletedQuizzes(data);\r\n        } else {\r\n          console.error('Failed to fetch completed quizzes');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n\r\n    fetchCompletedQuizzes();\r\n  }, []);\r\n\r\n  // Function to return 'active' class if the link is active\r\n  const getNavLinkClass = ({ isActive }) => isActive ? 'active' : '';\r\n\r\n  return (\r\n    <div className=\"student-dashboard\">\r\n      <Navigation />\r\n      <div className=\"sidebar\">\r\n        <NavLink to=\"profile\" className={getNavLinkClass}>Profile</NavLink>\r\n        <NavLink to=\"ongoing-quizzes\" className={getNavLinkClass}>Ongoing Quizzes</NavLink>\r\n        <NavLink to=\"completed-quizzes\" className={getNavLinkClass}>Completed Quizzes</NavLink>\r\n      </div>\r\n      <div className=\"content\">\r\n        <Routes>\r\n          <Route path=\"profile\" element={<Profile studentInfo={studentInfo} />} />\r\n          <Route path=\"ongoing-quizzes\" element={<OngoingQuizzes quizzes={ongoingQuizzes} />} />\r\n          <Route path=\"completed-quizzes\" element={<CompletedQuizzes quizzes={completedQuizzes} />} />\r\n          <Route index element={<Profile studentInfo={studentInfo} />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}