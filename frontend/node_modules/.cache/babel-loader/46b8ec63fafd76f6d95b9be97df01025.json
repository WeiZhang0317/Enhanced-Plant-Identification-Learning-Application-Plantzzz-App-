{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fernanda\\\\Documents\\\\GitHub\\\\plantzzz\\\\frontend\\\\src\\\\examples\\\\Charts\\\\LineCharts\\\\ReportsLineChart\\\\index.js\";\n/**\n=========================================================\n* Material Dashboard 2  React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport React from 'react';\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from \"chart.js\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// ReportsLineChart configurations\nimport configs from \"examples/Charts/LineCharts/ReportsLineChart/configs\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nfunction ReportsLineChart({\n  color,\n  title,\n  description,\n  date,\n  chart\n}) {\n  const {\n    data,\n    options\n  } = configs(chart.labels || [], chart.datasets || {});\n  return /*#__PURE__*/React.createElement(Card, {\n    sx: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MDBox, {\n    padding: \"1rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, useMemo(() => /*#__PURE__*/React.createElement(MDBox, {\n    variant: \"gradient\",\n    bgColor: color,\n    borderRadius: \"lg\",\n    coloredShadow: color,\n    py: 2,\n    pr: 0.5,\n    mt: -5,\n    height: \"12.5rem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: data,\n    options: options,\n    redraw: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), [chart, color]), /*#__PURE__*/React.createElement(MDBox, {\n    pt: 3,\n    pb: 1,\n    px: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MDTypography, {\n    variant: \"h6\",\n    textTransform: \"capitalize\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(MDTypography, {\n    component: \"div\",\n    variant: \"button\",\n    color: \"text\",\n    fontWeight: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, description), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MDBox, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MDTypography, {\n    variant: \"button\",\n    color: \"text\",\n    lineHeight: 1,\n    sx: {\n      mt: 0.15,\n      mr: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"schedule\")), /*#__PURE__*/React.createElement(MDTypography, {\n    variant: \"button\",\n    color: \"text\",\n    fontWeight: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, date)))));\n}\n\n// Setting default values for the props of ReportsLineChart\nReportsLineChart.defaultProps = {\n  color: \"info\",\n  description: \"\"\n};\n\n// Typechecking props for the ReportsLineChart\nReportsLineChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  date: PropTypes.string.isRequired,\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired\n};\nexport default ReportsLineChart;","map":{"version":3,"names":["React","useMemo","PropTypes","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","Card","Divider","Icon","MDBox","MDTypography","configs","register","ReportsLineChart","color","title","description","date","chart","data","options","labels","datasets","createElement","sx","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","padding","variant","bgColor","borderRadius","coloredShadow","py","pr","mt","redraw","pt","pb","px","textTransform","component","fontWeight","display","alignItems","lineHeight","mr","defaultProps","propTypes","oneOf","string","isRequired","oneOfType","node","objectOf","array","object"],"sources":["C:/Users/Fernanda/Documents/GitHub/plantzzz/frontend/src/examples/Charts/LineCharts/ReportsLineChart/index.js"],"sourcesContent":["/**\n=========================================================\n* Material Dashboard 2  React - v2.2.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/material-dashboard-react\n* Copyright 2023 Creative Tim (https://www.creative-tim.com)\n\nCoded by www.creative-tim.com\n\n =========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n*/\nimport React from 'react';\nimport { useMemo } from \"react\";\n\n// porp-types is a library for typechecking of props\nimport PropTypes from \"prop-types\";\n\n// react-chartjs-2 components\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\n// @mui material components\nimport Card from \"@mui/material/Card\";\nimport Divider from \"@mui/material/Divider\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDTypography from \"components/MDTypography\";\n\n// ReportsLineChart configurations\nimport configs from \"examples/Charts/LineCharts/ReportsLineChart/configs\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nfunction ReportsLineChart({ color, title, description, date, chart }) {\n  const { data, options } = configs(chart.labels || [], chart.datasets || {});\n\n  return (\n    <Card sx={{ height: \"100%\" }}>\n      <MDBox padding=\"1rem\">\n        {useMemo(\n          () => (\n            <MDBox\n              variant=\"gradient\"\n              bgColor={color}\n              borderRadius=\"lg\"\n              coloredShadow={color}\n              py={2}\n              pr={0.5}\n              mt={-5}\n              height=\"12.5rem\"\n            >\n              <Line data={data} options={options} redraw />\n            </MDBox>\n          ),\n          [chart, color]\n        )}\n        <MDBox pt={3} pb={1} px={1}>\n          <MDTypography variant=\"h6\" textTransform=\"capitalize\">\n            {title}\n          </MDTypography>\n          <MDTypography component=\"div\" variant=\"button\" color=\"text\" fontWeight=\"light\">\n            {description}\n          </MDTypography>\n          <Divider />\n          <MDBox display=\"flex\" alignItems=\"center\">\n            <MDTypography variant=\"button\" color=\"text\" lineHeight={1} sx={{ mt: 0.15, mr: 0.5 }}>\n              <Icon>schedule</Icon>\n            </MDTypography>\n            <MDTypography variant=\"button\" color=\"text\" fontWeight=\"light\">\n              {date}\n            </MDTypography>\n          </MDBox>\n        </MDBox>\n      </MDBox>\n    </Card>\n  );\n}\n\n// Setting default values for the props of ReportsLineChart\nReportsLineChart.defaultProps = {\n  color: \"info\",\n  description: \"\",\n};\n\n// Typechecking props for the ReportsLineChart\nReportsLineChart.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"info\", \"success\", \"warning\", \"error\", \"dark\"]),\n  title: PropTypes.string.isRequired,\n  description: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  date: PropTypes.string.isRequired,\n  chart: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.array, PropTypes.object])).isRequired,\n};\n\nexport default ReportsLineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}